<feed xmlns="http://www.w3.org/2005/Atom"> <id>https://venechi.github.io/</id><title>VTeB</title><subtitle>logs about portfolio, errors &amp; solutions and learnings.</subtitle> <updated>2022-01-20T01:10:31+09:00</updated> <author> <name>Sungjo Wi</name> <uri>https://venechi.github.io/</uri> </author><link rel="self" type="application/atom+xml" href="https://venechi.github.io/feed.xml"/><link rel="alternate" type="text/html" hreflang="ko" href="https://venechi.github.io/"/> <generator uri="https://jekyllrb.com/" version="4.2.1">Jekyll</generator> <rights> © 2022 Sungjo Wi </rights> <icon>/assets/img/favicons/favicon.ico</icon> <logo>/assets/img/favicons/favicon-96x96.png</logo> <entry><title>젠킨스에 react project 연동하기</title><link href="https://venechi.github.io/posts/a005/" rel="alternate" type="text/html" title="젠킨스에 react project 연동하기" /><published>2022-01-19T23:38:00+09:00</published> <updated>2022-01-19T23:38:00+09:00</updated> <id>https://venechi.github.io/posts/a005/</id> <content src="https://venechi.github.io/posts/a005/" /> <author> <name>Sungjo Wi</name> </author> <category term="blog" /> <summary> Jenkins를 이용하여 react project를 자동으로 빌드하고 배포하도록 설정해 보았다. 우선 react를 빌드한 후 생성된 웹 페이지를 서비스하기 위한 nginx를 설치한다. sudo apt-get update sudo apt-get install nginx 위의 명령어로 간단히 설치할 수 있으며, systemctl status nginx 명령어로 정상 작동하는지 확인할 수 있다. ​ 웹 브라우저를 이용해 nginx가 설치된 서버의 ip주소로 접속하면, 위와 같은 페이지를 볼 수 있는데, 혹시 연결이 되지 않는다면, ufw 등을 이용하여 방화벽에서 80번 포트가 허용되었는지 확인해 보자. ​ 이제 react app을 create-react-app을 이용하여 생성하고, ... </summary> </entry> <entry><title>젠킨스와 깃헙 연동하기</title><link href="https://venechi.github.io/posts/a004/" rel="alternate" type="text/html" title="젠킨스와 깃헙 연동하기" /><published>2022-01-11T17:49:00+09:00</published> <updated>2022-01-11T17:49:00+09:00</updated> <id>https://venechi.github.io/posts/a004/</id> <content src="https://venechi.github.io/posts/a004/" /> <author> <name>Sungjo Wi</name> </author> <category term="blog" /> <summary> 저번 포스팅에서 설치한 젠킨스와 깃헙을 연동해 보았다. 우선 젠킨스에서 깃헙에 접근할 수 있도록 토큰을 발행하기 위해 개인 메뉴에서 ‘settings’페이지로 이동하고 ‘Developer settings’ -&amp;gt; ‘Personal access tokens’ -&amp;gt; ‘Generate new token’을 차례로 선택해 준다 젠킨스에서 깃헙에 추가적인 작업은 하지 않을 계획이므로 웹훅에 접근할 수 있는 권한만 허용해 준다. (다른 작업을 위해서는 Scopes for OAuth Apps을 참조하여 권한을 조정해 주자) Note에 적당한 이름을 지정해 주고(꼭 jenkins일 필요는 없음) ‘Generate toekn’버튼을 누르면 다음과 같이 토큰 문자열을 주는데, 다시 확인이 불... </summary> </entry> <entry><title>우분투 서버에 젠킨스 설치하기</title><link href="https://venechi.github.io/posts/a003/" rel="alternate" type="text/html" title="우분투 서버에 젠킨스 설치하기" /><published>2022-01-10T23:51:00+09:00</published> <updated>2022-01-10T23:51:00+09:00</updated> <id>https://venechi.github.io/posts/a003/</id> <content src="https://venechi.github.io/posts/a003/" /> <author> <name>Sungjo Wi</name> </author> <category term="blog" /> <summary> 우분투 서버(20.04LTS)에 젠킨스를 설치해보았다. 젠킨스를 구동하기 위해선 java가 필요하므로 java -version 을 입력했을 때, 에러 메시지가 나오면 java 를 입력하여 나오는 선택지 중 한 가지를 설치해 준다 여기선 openjdk-11을 설치해 주었다. 설치가 정상적으로 완료되었으면, 다시 java -version 을 입력하여 아래와 비슷한 결과가 나오는지 확인하고, 다음으로 넘어간다. jenkins를 설치하기 위한 사전 준비를 마쳤고, curl -fsSL https://pkg.jenkins.io/debian-stable/jenkins.io.key | sudo tee \ /usr/share/keyrings/jenkins-keyring.asc &amp;gt... </summary> </entry> <entry><title>블로그에 댓글 시스템(Utterances) 적용하기</title><link href="https://venechi.github.io/posts/a002/" rel="alternate" type="text/html" title="블로그에 댓글 시스템(Utterances) 적용하기" /><published>2021-07-28T15:19:00+09:00</published> <updated>2022-01-11T00:34:32+09:00</updated> <id>https://venechi.github.io/posts/a002/</id> <content src="https://venechi.github.io/posts/a002/" /> <author> <name>Sungjo Wi</name> </author> <category term="blog" /> <summary> ​ 저번 포스팅에서 github pages로 블로그를 생성했으니 이제 댓글 기능을 구현할 때가 됐다. ​ 저번 포스팅에서도 언급했지만 Chripy 테마에서 disques를 제공하지만 utterances를 적용하는 이유는 댓글 기능만을 위해 회원가입을 하기가 싫고, 내가 저자가 아닌 독자의 입장이었을 때도, 댓글 하나 남기고자 회원가입을 하기 귀찮았기 때문이며, 나와 같은 사람들이 충분히 많을 것 같다는 이유에서다. 물론 utterances도 github 계정을 기반으로 동작하긴 하지만, 이 블로그가 기술 블로그고, 주 타겟 독자층이 개발자들인 만큼, 다들 github 계정 하나씩은 있으리라 생각했다. ​ 서두는 이만 하고, utterances 적용 방법을 설명하자면, utterances 홈... </summary> </entry> <entry><title>Cripy 테마와 github pages로 블로그 만들기</title><link href="https://venechi.github.io/posts/a001/" rel="alternate" type="text/html" title="Cripy 테마와 github pages로 블로그 만들기" /><published>2021-07-27T14:10:25+09:00</published> <updated>2021-07-27T14:10:25+09:00</updated> <id>https://venechi.github.io/posts/a001/</id> <content src="https://venechi.github.io/posts/a001/" /> <author> <name>Sungjo Wi</name> </author> <category term="blog" /> <summary> 대학교를 졸업하고 취직을 준비하려고 포트폴리오를 만들었는데, Git에 프로젝트를 하면서 느낀 점들과 각종 에러&amp;amp;솔루션을 첨부하는건 좀 아닌 것 같아 블로그를 시작하기로 마음먹었다. 여러 블로그 플랫폼들을 훑어봤는데, 어차피 개발 관련 내용이 주일 것이므로 구글에 잘 노출되지 않는 네이버, 다음 등의 블로그는 아웃, 티스토리나, 워드프레스 등 타 플랫폼들은 구글에 노출도 잘 되고 어려 커스텀이 가능하긴 하지만, 회원가입을 해야 하므로 패스하고, full custom이 가능하고, 회원가입도 필요없는 github pages로 결정했다. ​ github pages로 블로그를 만드려면, 우선 맘에 드는 테마를 http://jekyllthemes.org/에서 고르면 되는데, 나는 이 블로그에 적용된... </summary> </entry> </feed>
